#!/usr/bin/env python
# -*- coding: utf-8 -*-



__all__ = ['ViewpixxComponent']

from os import path
import json
from pathlib import Path
from psychopy.localization import _translate, _localized as __localized
from psychopy.experiment.components import (BaseComponent, Param, getInitVals)

_localized = __localized.copy()


_localized.update({'vmode': _translate('video mode'),
                   'scanBackLight': _translate('scanning back light'),
                   })

class ViewpixxComponent(BaseComponent):  
    """A class for the viewpixx device
    """
    categories = ['Responses']
    targets = ['PsychoPy']
    iconFile = Path(__file__).parent / 'mouse.png'
    tooltip = _translate('Viewpixx: Setup a Viewpixx')
    plugin = "psychopy-pixx"
    
    def __init__(self, exp, parentName, name='viewpixx',
                 startType='time (s)', startVal=0.0,
                 startEstim='', durationEstim='',
                 stopType='duration (s)', stopVal=1.0, vmode='M18', scanBackLight=False):
        super(ViewpixxComponent, self).__init__(
            exp, parentName, name=name,
            startType=startType, startVal=startVal,
            stopType=stopType, stopVal=stopVal,
            startEstim=startEstim, durationEstim=durationEstim)

        self.type = 'Viewpixx'
        self.url = ""

        self.order += [
            'vmode', 'scanBackLight',
            ]

        # params

        msg = _translate("Set to the wanted video mode")
        self.params['vmode'] = Param(
            valType='str', inputType="choice", categ='Basic',
            allowedVals=['C24', 'M18', 'L48', 'C48'],
            updates='constant',
            hint=msg,
            label=_localized['vmode'])
        msg = _translate("Should the scanning back light be used?")
        self.params['scanBackLight'] = Param(
            True, valType='bool', inputType="bool", categ='Basic',
            updates='constant',
            hint=msg,
            label=_localized['scanBackLight'])

#    def writeInitCode(self, buff):
#        """write the code that will be called at initialization"""
#        buff.writeIndented("# This is generated by writeInitCode\n")
#        inits = getInitVals(self.params, 'PsychoPy')
#        code = ('{} = visual.BaseVisualStim('.format(inits['name']) +
#                'win=win, name="{}")\n'.format(inits['name'])
#                )
#        buff.writeIndentedLines(code)
#        code = "from pypixxlib.viewpixx import VIEWPixx\n"
#        code += "prefs.general['allowGUI'] = False\n"
#        code += "pixxdevice = VIEWPixx()\n"
#        code += "pixxdevice.setScanningBackLight({})".format(self.params["scanBackLight"].val)
#        code += "pixxdevice.setVideoMode({})".format(self.params["vmode"])
#        code += "pixxdevice.updateRegisterCache()"
#        buff.writeIndentedLines(code)
